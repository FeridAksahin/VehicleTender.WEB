// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleTender.API.Entity.Context;

#nullable disable

namespace VehicleTender.API.Entity.Migrations
{
    [DbContext(typeof(VehicleTenderContext))]
    [Migration("20221023174950_updateDBbb")]
    partial class updateDBbb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.AdvertInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CarDetailInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("KM")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalTramerPrice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("AdvertInfo");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Authority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AuthorityName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authority");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.BuyingTender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsItSold")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Offer")
                        .HasColumnType("money");

                    b.Property<int?>("TenderVehicleSalesId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenderVehicleSalesId");

                    b.HasIndex("UserId");

                    b.ToTable("BuyingTender");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CarDetailInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AdvertInfoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CarDetailInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("CarId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CommissionId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NotaryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdvertInfoId");

                    b.HasIndex("CarDetailInfoId");

                    b.HasIndex("CarId");

                    b.HasIndex("CommissionId");

                    b.HasIndex("NotaryId");

                    b.HasIndex("UserId");

                    b.ToTable("CarDetailInfo");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CarFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CarFeatureCodeMeaningId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("CarFeatureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarFeatureCodeMeaningId");

                    b.ToTable("CarFeature");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CarFeatureCodeMeaning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarFeatureCodeMeaning");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CarFeatureValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CarFeatureId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CarId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarFeatureId");

                    b.HasIndex("CarId");

                    b.ToTable("CarFeatureValue");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Commission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("CarPriceEnd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CarPriceStarting")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CommissionPrice")
                        .HasColumnType("money");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Commission");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CompanyPacketHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EnumPacketId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnumPacketId");

                    b.HasIndex("UserId");

                    b.ToTable("CompanyPacketHistory");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CorporateDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("EnumCompanyTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("EnumPacketId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnumCompanyTypeId");

                    b.HasIndex("EnumPacketId");

                    b.HasIndex("UserId");

                    b.ToTable("CorporateDetail");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.EnumCompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("EnumCompanyType");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.EnumMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Message")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("EnumMessage");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.EnumPacket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("EnumPacket");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.EnumStatuType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("EnumStatuType");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Expertise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Expertise");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AdvertInfoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdvertInfoId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorite");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.FavoriteFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("FavoriteSearchCriteriaId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("HardwareId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FavoriteSearchCriteriaId");

                    b.HasIndex("HardwareId");

                    b.HasIndex("UserId");

                    b.ToTable("FavoriteFeature");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.FavoriteSearchCriteria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("FavoriteSearchCriteria");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Hardware", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CarId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HardwareTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("HardwareTypeId");

                    b.ToTable("Hardware");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.HardwareType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("HardwareName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("HardwareType");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.IndividualVehiclePurchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IndividualVehicleSalesId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserIdBuyer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IndividualVehicleSalesId");

                    b.HasIndex("UserIdBuyer");

                    b.ToTable("IndividualVehiclePurchase");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.IndividualVehicleSales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CarDetailInfoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("OfficialOffer")
                        .HasColumnType("money");

                    b.Property<decimal?>("PreAssessmentPrice")
                        .HasColumnType("money");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarDetailInfoId");

                    b.HasIndex("UserId");

                    b.ToTable("IndividualVehicleSales");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.IndividualVehicleSalesStatuHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IndividualVehicleSalesId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatuId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IndividualVehicleSalesId");

                    b.HasIndex("StatuId");

                    b.ToTable("IndividualVehicleSalesStatuHistory");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EnumMessageId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnumMessageId");

                    b.HasIndex("UserId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Notary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("NotaryPrice")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Notary");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.PacketAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EnumPacketId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MonthlyTenderLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnumPacketId");

                    b.ToTable("PacketAuthority");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AdvertInfoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PicturePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertInfoId");

                    b.ToTable("Picture");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.PurchasedVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BuyerUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CarDetailInfoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SellerUserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("isItTender")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CarDetailInfoId");

                    b.HasIndex("SellerUserId");

                    b.ToTable("PurchasedVehicle");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.RoleAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AuthorityId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RoleId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorityId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleAuthority");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.RoleUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RoleId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("RoleUser");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Statu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("EnumStatuTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("EnumStatuTypeId");

                    b.ToTable("Statu");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CarDetailInfoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarDetailInfoId");

                    b.HasIndex("UserId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TenderStatuHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatuId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("TenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StatuId");

                    b.ToTable("TenderStatuHistory");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TenderVehicleBid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TenderVehicleDetailId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TenderVehicleDetailId");

                    b.HasIndex("UserId");

                    b.ToTable("TenderVehicleBid");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TenderVehicleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CarDetailInfoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TenderVehicleSalesId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarDetailInfoId");

                    b.HasIndex("TenderVehicleSalesId");

                    b.ToTable("TenderVehicleDetail");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TenderVehicleSales", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FavoriteCount")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StatuId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<decimal?>("TargetPrice")
                        .HasColumnType("money");

                    b.Property<string>("TenderDuration")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenderEndDate")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TenderEndHour")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal?>("TenderMinumumPrice")
                        .HasColumnType("money");

                    b.Property<string>("TenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenderStartDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TenderStartingPrice")
                        .HasColumnType("money");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool?>("isItCorporate")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("StatuId");

                    b.HasIndex("UserId");

                    b.ToTable("TenderVehicleSales");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TramerPart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("TramerPartName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TramerPrice")
                        .HasColumnType("int");

                    b.Property<bool?>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TramerPart");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TramerSituationValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Situation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TramerSituationValue");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TramerValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CarId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TramerPartId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TramerSituationValueId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("TramerPartId");

                    b.HasIndex("TramerSituationValueId");

                    b.ToTable("TramerValue");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("Kvkk")
                        .HasColumnType("bit");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.VehicleStatuHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CarDetailInfoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StatuId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarDetailInfoId");

                    b.HasIndex("StatuId");

                    b.ToTable("VehicleStatuHistory");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.BuyingTender", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.TenderVehicleSales", "TenderVehicleSales")
                        .WithMany("BuyingTender")
                        .HasForeignKey("TenderVehicleSalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "User")
                        .WithMany("BuyingTender")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TenderVehicleSales");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CarDetailInfo", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.AdvertInfo", "AdvertInfo")
                        .WithMany()
                        .HasForeignKey("AdvertInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.AdvertInfo", null)
                        .WithMany("CarDetailInfo")
                        .HasForeignKey("CarDetailInfoId");

                    b.HasOne("VehicleTender.API.Entity.Entities.Car", "Car")
                        .WithMany("CarDetailInfo")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.Commission", "Commission")
                        .WithMany()
                        .HasForeignKey("CommissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.Notary", "Notary")
                        .WithMany("CarDetailInfo")
                        .HasForeignKey("NotaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "User")
                        .WithMany("CarDetailInfo")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdvertInfo");

                    b.Navigation("Car");

                    b.Navigation("Commission");

                    b.Navigation("Notary");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CarFeature", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.CarFeatureCodeMeaning", "CarFeatureCodeMeaning")
                        .WithMany("CarFeature")
                        .HasForeignKey("CarFeatureCodeMeaningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarFeatureCodeMeaning");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CarFeatureValue", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.CarFeature", "CarFeature")
                        .WithMany("CarFeatureValue")
                        .HasForeignKey("CarFeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.Car", "Car")
                        .WithMany("CarFeatureValue")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("CarFeature");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CompanyPacketHistory", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.EnumPacket", "EnumPacket")
                        .WithMany("CompanyPacketHistory")
                        .HasForeignKey("EnumPacketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "User")
                        .WithMany("CompanyPacketHistory")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnumPacket");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CorporateDetail", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.EnumCompanyType", "EnumCompanyType")
                        .WithMany("CorporateDetail")
                        .HasForeignKey("EnumCompanyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.EnumPacket", "EnumPacket")
                        .WithMany("CorporateDetail")
                        .HasForeignKey("EnumPacketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "User")
                        .WithMany("CorporateDetail")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnumCompanyType");

                    b.Navigation("EnumPacket");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Favorite", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.AdvertInfo", "AdvertInfo")
                        .WithMany("Favorite")
                        .HasForeignKey("AdvertInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "User")
                        .WithMany("Favorite")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdvertInfo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.FavoriteFeature", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.FavoriteSearchCriteria", "FavoriteSearchCriteria")
                        .WithMany()
                        .HasForeignKey("FavoriteSearchCriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.Hardware", "Hardware")
                        .WithMany()
                        .HasForeignKey("HardwareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FavoriteSearchCriteria");

                    b.Navigation("Hardware");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Hardware", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.HardwareType", "HardwareType")
                        .WithMany("Hardware")
                        .HasForeignKey("HardwareTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("HardwareType");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.IndividualVehiclePurchase", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.IndividualVehicleSales", "IndividualVehicleSales")
                        .WithMany("IndividualVehiclePurchase")
                        .HasForeignKey("IndividualVehicleSalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "User")
                        .WithMany("IndividualVehiclePurchase")
                        .HasForeignKey("UserIdBuyer");

                    b.Navigation("IndividualVehicleSales");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.IndividualVehicleSales", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.CarDetailInfo", "CarDetailInfo")
                        .WithMany("IndividualVehicleSales")
                        .HasForeignKey("CarDetailInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "User")
                        .WithMany("IndividualVehicleSales")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarDetailInfo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.IndividualVehicleSalesStatuHistory", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.IndividualVehicleSales", "IndividualVehicleSales")
                        .WithMany("IndividualVehicleSalesStatuHistory")
                        .HasForeignKey("IndividualVehicleSalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.Statu", "Statu")
                        .WithMany()
                        .HasForeignKey("StatuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndividualVehicleSales");

                    b.Navigation("Statu");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Message", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.EnumMessage", "EnumMessage")
                        .WithMany()
                        .HasForeignKey("EnumMessageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "User")
                        .WithMany("Message")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnumMessage");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.PacketAuthority", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.EnumPacket", "EnumPacket")
                        .WithMany("PacketAuthority")
                        .HasForeignKey("EnumPacketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnumPacket");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Picture", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.AdvertInfo", "AdvertInfo")
                        .WithMany("Picture")
                        .HasForeignKey("AdvertInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdvertInfo");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.PurchasedVehicle", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.CarDetailInfo", "CarDetailInfo")
                        .WithMany("PurchasedVehicle")
                        .HasForeignKey("CarDetailInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "SellerUser")
                        .WithMany()
                        .HasForeignKey("SellerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarDetailInfo");

                    b.Navigation("SellerUser");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.RoleAuthority", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.Authority", "Authority")
                        .WithMany()
                        .HasForeignKey("AuthorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.Role", "Role")
                        .WithMany("RoleAuthority")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Authority");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.RoleUser", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.Role", "Role")
                        .WithMany("RoleUser")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "User")
                        .WithMany("RoleUser")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Statu", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.EnumStatuType", "EnumStatuType")
                        .WithMany("Statu")
                        .HasForeignKey("EnumStatuTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnumStatuType");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Stock", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.CarDetailInfo", "CarDetailInfo")
                        .WithMany("Stock")
                        .HasForeignKey("CarDetailInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "User")
                        .WithMany("Stock")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarDetailInfo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TenderStatuHistory", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.Statu", "Statu")
                        .WithMany("TenderStatuHistory")
                        .HasForeignKey("StatuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Statu");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TenderVehicleBid", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.TenderVehicleDetail", "TenderVehicleDetail")
                        .WithMany("TenderVehicleBid")
                        .HasForeignKey("TenderVehicleDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "User")
                        .WithMany("TenderVehicleBid")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TenderVehicleDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TenderVehicleDetail", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.CarDetailInfo", "CarDetailInfo")
                        .WithMany("TenderVehicleDetail")
                        .HasForeignKey("CarDetailInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.TenderVehicleSales", "TenderVehicleSales")
                        .WithMany("TenderVehicleDetail")
                        .HasForeignKey("TenderVehicleSalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarDetailInfo");

                    b.Navigation("TenderVehicleSales");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TenderVehicleSales", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.Statu", "Statu")
                        .WithMany("TenderVehicleSales")
                        .HasForeignKey("StatuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.User", "User")
                        .WithMany("TenderVehicleSales")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Statu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TramerValue", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.Car", "Car")
                        .WithMany("TramerValue")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.TramerPart", "TramerPart")
                        .WithMany("TramerValue")
                        .HasForeignKey("TramerPartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.TramerSituationValue", "TramerSituationValue")
                        .WithMany("TramerValue")
                        .HasForeignKey("TramerSituationValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("TramerPart");

                    b.Navigation("TramerSituationValue");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.VehicleStatuHistory", b =>
                {
                    b.HasOne("VehicleTender.API.Entity.Entities.CarDetailInfo", "CarDetailInfo")
                        .WithMany("VehicleStatuHistory")
                        .HasForeignKey("CarDetailInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleTender.API.Entity.Entities.Statu", "Statu")
                        .WithMany("VehicleStatuHistory")
                        .HasForeignKey("StatuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarDetailInfo");

                    b.Navigation("Statu");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.AdvertInfo", b =>
                {
                    b.Navigation("CarDetailInfo");

                    b.Navigation("Favorite");

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Car", b =>
                {
                    b.Navigation("CarDetailInfo");

                    b.Navigation("CarFeatureValue");

                    b.Navigation("TramerValue");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CarDetailInfo", b =>
                {
                    b.Navigation("IndividualVehicleSales");

                    b.Navigation("PurchasedVehicle");

                    b.Navigation("Stock");

                    b.Navigation("TenderVehicleDetail");

                    b.Navigation("VehicleStatuHistory");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CarFeature", b =>
                {
                    b.Navigation("CarFeatureValue");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.CarFeatureCodeMeaning", b =>
                {
                    b.Navigation("CarFeature");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.EnumCompanyType", b =>
                {
                    b.Navigation("CorporateDetail");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.EnumPacket", b =>
                {
                    b.Navigation("CompanyPacketHistory");

                    b.Navigation("CorporateDetail");

                    b.Navigation("PacketAuthority");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.EnumStatuType", b =>
                {
                    b.Navigation("Statu");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.HardwareType", b =>
                {
                    b.Navigation("Hardware");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.IndividualVehicleSales", b =>
                {
                    b.Navigation("IndividualVehiclePurchase");

                    b.Navigation("IndividualVehicleSalesStatuHistory");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Notary", b =>
                {
                    b.Navigation("CarDetailInfo");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Role", b =>
                {
                    b.Navigation("RoleAuthority");

                    b.Navigation("RoleUser");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.Statu", b =>
                {
                    b.Navigation("TenderStatuHistory");

                    b.Navigation("TenderVehicleSales");

                    b.Navigation("VehicleStatuHistory");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TenderVehicleDetail", b =>
                {
                    b.Navigation("TenderVehicleBid");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TenderVehicleSales", b =>
                {
                    b.Navigation("BuyingTender");

                    b.Navigation("TenderVehicleDetail");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TramerPart", b =>
                {
                    b.Navigation("TramerValue");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.TramerSituationValue", b =>
                {
                    b.Navigation("TramerValue");
                });

            modelBuilder.Entity("VehicleTender.API.Entity.Entities.User", b =>
                {
                    b.Navigation("BuyingTender");

                    b.Navigation("CarDetailInfo");

                    b.Navigation("CompanyPacketHistory");

                    b.Navigation("CorporateDetail");

                    b.Navigation("Favorite");

                    b.Navigation("IndividualVehiclePurchase");

                    b.Navigation("IndividualVehicleSales");

                    b.Navigation("Message");

                    b.Navigation("RoleUser");

                    b.Navigation("Stock");

                    b.Navigation("TenderVehicleBid");

                    b.Navigation("TenderVehicleSales");
                });
#pragma warning restore 612, 618
        }
    }
}
